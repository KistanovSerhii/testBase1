
Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ) 	
	ШагЗадачи = Перечисления.ШагЗадачи.ПринятиеВРаботу;
	ОповеститьСледующегоАдресата();
	Комментарий = ?( ЗначениеЗаполнено(Комментарий) И НЕ Стартован, "" + ПараметрыСеанса.ТекущийПользователь +
	"(" + Строка(ТекущаяДатаСеанса()) + ")  : " + Символы.ПС + Комментарий, "");
	Исполнитель  = ?(ЗначениеЗаполнено(Исполнитель) И НЕ Стартован, Константы.ПолучательПервичногоДокумента.Получить(), Исполнитель);		
КонецПроцедуры

Процедура ОповеститьСледующегоАдресата(текстЗаголовка = "") Экспорт
	
	Если НЕ ЭтотОбъект.ПолучательФИО.ОтключитьEmail Тогда
		массивПолучательEmail = Новый Массив;
		массивПолучательEmail.Добавить(ЭтотОбъект.ПолучательФИО.АдресЭлектроннойПочты);
		ОповеститьСледующегоАдресатаСогласоватьИлиВыполнить(массивПолучательEmail, "создана и направлена на рассмотрение");
	КонецЕсли;
		
КонецПроцедуры

Процедура ОповеститьСледующегоАдресатаСогласоватьИлиВыполнить(получательEmail, текстЗаголовка = "")
		
	отправительИмя = ЭтотОбъект.ЗаявительФИО.ПолноеИмя;
	// получательEmail - меняется
	тема = "задача от:" + отправительИмя + ", " +  " - " + текстЗаголовка;
		
	содержимоеТекст = "Отправитель: *ФИО , *Должность, *Подразделение " + Символы.ПС +
					  "Получатель: *ФИО , *Должность, *Подразделение "  + Символы.ПС +
					  "Тема обращения: *Тема "  + Символы.ПС +
					  "Номер заявки: "  + Строка(ЭтотОбъект.Номер) + Символы.ПС + Символы.ПС +
	
	ЭтотОбъект.Комментарий +
	Символы.ПС +
	Символы.ПС +

	"Дата " + Строка(ЭтотОбъект.Дата);
	
	// Сигнатура функции (только с обязательнами параметрами) которую необходимо выполнить в фоновом режиме	
	ТекстФоновойПроцедуры = "ОбщийМодульEmail.ОтправитьСодержимое(отправительИмя, массивАдресаПолучателей, тема, содержимоеТекст);";
	ФоновоеВыполнение.ЗапуститьФоновоеВыполнение(ТекстФоновойПроцедуры, 
	Новый Структура("отправительИмя, массивАдресаПолучателей, тема, содержимоеТекст",
	отправительИмя, получательEmail, тема, содержимоеТекст));
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если  НЕ пометкаУдаления И  (НЕ ЗначениеЗаполнено(ЭтотОбъект.ЗаявительФИО) И (НЕ ЭтотОбъект.Отказано)) Тогда
		Сообщить("Укажите ФИО заявителя!");
		Отказ = ИСТИНА;
		Возврат;
	КонецЕсли;		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ОбъектКопирования.ИмяЗадачи = "Копирование";
КонецПроцедуры

#Область НеИспользуется
// Не используется
Процедура СогласоватьРуководительИТПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)

	имяТекущейТочкиМаршрута = ТочкаМаршрутаБизнесПроцесса.ФункционалВТекущейИБ.ИмяПредопределенныхДанных;
	Если имяТекущейТочкиМаршрута <> "Инициатор" Тогда
		// Уведомление Куратора
		массивАдресов = УправлениеКонфигурацией.ПолучитМассивАдресовСледующихАресатов(имяТекущейТочкиМаршрута);
		ОповеститьСледующегоАдресатаСогласоватьИлиВыполнить(массивАдресов);		
	КонецЕсли;
	
	ЭтотОбъект.Записать();
	
КонецПроцедуры

Процедура ТребуетУточненийПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ТребуетУточнений;
КонецПроцедуры

Процедура ПеренаправилПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ЗначениеЗаполнено(Исполнитель);
КонецПроцедуры

Процедура ОтказПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = Отказано;
КонецПроцедуры

#КонецОбласти