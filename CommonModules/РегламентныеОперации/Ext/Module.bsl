Процедура ОтправитьЕженедельныйОтчет() Экспорт
	//ОтправитьЖурналРегистрацииДляОтправки();
	//РегистрацияПользователейБпДляОтправки();
	//ОтправитьБазаПочтовыхАдресов();
КонецПроцедуры

Процедура ОтправитьЖурналРегистрацииДляОтправки()
	
	имяОтчета = "ЖурналРегистрацииДляОтправки";
	
	массивАдресаПолучателей = получитьМассивАдресов(имяОтчета);
	Если массивАдресаПолучателей = Неопределено ИЛИ массивАдресаПолучателей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	ДатаНач = Дата(НачалоНедели(ТекущаяДата() - (60*60*24*7) ));
	ДатаКон = Дата( КонецДня(ТекущаяДата()) );
	темаПисьма = "Отчет обработанных обращений с " + Строка(ДатаНач) + " по " +  Строка(ДатаКон);
	текстПисьмаТело = "Добрый день, вам направлен " + темаПисьма + " (файл отчета во вложении)";
	имяОтчетаВКонфигурации = имяОтчета;
	СхемаКомпоновкиДанных = Отчеты[имяОтчета].ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	параметрыКомпоновщикаКакМассивСтруктур = Новый Массив;
	параметрыКомпоновщикаКакМассивСтруктур.Добавить( Новый Структура("имя,значение", "ДатаНачало", ДатаНач) );
	параметрыКомпоновщикаКакМассивСтруктур.Добавить( Новый Структура("имя,значение", "ДатаОкончания", ДатаКон) );
	
	СформироватьОтчетПоСхемеКомпоновкиИОтправитьПисьмом(массивАдресаПолучателей, темаПисьма, текстПисьмаТело, имяОтчетаВКонфигурации, СхемаКомпоновкиДанных, параметрыКомпоновщикаКакМассивСтруктур);
	
КонецПроцедуры

Процедура РегистрацияПользователейБпДляОтправки()
	
	имяОтчета = "РегистрацияПользователейБпДляОтправки";
	
	массивАдресаПолучателей = получитьМассивАдресов(имяОтчета);
	Если массивАдресаПолучателей = Неопределено ИЛИ массивАдресаПолучателей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	ДатаНач = Дата(НачалоНедели(ТекущаяДата() - (60*60*24*7) ));
	ДатаКон = Дата( КонецДня(ТекущаяДата()) );
	темаПисьма = "Отчет создания пользователей в БП с " + Строка(ДатаНач) + " по " +  Строка(ДатаКон);
	текстПисьмаТело = "Добрый день, вам направлен " + темаПисьма + " (файл отчета во вложении)";
	имяОтчетаВКонфигурации = имяОтчета;
	СхемаКомпоновкиДанных = Отчеты[имяОтчета].ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	параметрыКомпоновщикаКакМассивСтруктур = Новый Массив;
	параметрыКомпоновщикаКакМассивСтруктур.Добавить( Новый Структура("имя,значение", "ДатаНачало", ДатаНач) );
	параметрыКомпоновщикаКакМассивСтруктур.Добавить( Новый Структура("имя,значение", "ДатаОкончания", ДатаКон) );
	
	СформироватьОтчетПоСхемеКомпоновкиИОтправитьПисьмом(массивАдресаПолучателей, темаПисьма, текстПисьмаТело, имяОтчетаВКонфигурации, СхемаКомпоновкиДанных, параметрыКомпоновщикаКакМассивСтруктур);
	
КонецПроцедуры

Процедура ОтправитьБазаПочтовыхАдресов()
	
	имяОтчета = "БазаПочтовыхАдресов";
	
	массивАдресаПолучателей = получитьМассивАдресов(имяОтчета);
	Если массивАдресаПолучателей = Неопределено ИЛИ массивАдресаПолучателей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНач = Дата(НачалоНедели(ТекущаяДата() - (60*60*24*7) ));	
	ДатаКон = Дата( КонецДня(ТекущаяДата()) );
	темаПисьма = "Отчет ввода новых эл. адресов с " + Строка(ДатаНач) + " по " +  Строка(ДатаКон);
	текстПисьмаТело = "Добрый день, вам направлен " + темаПисьма + " (файл отчета во вложении)";
	имяОтчетаВКонфигурации = имяОтчета;
	СхемаКомпоновкиДанных = Отчеты[имяОтчета].ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	параметрыКомпоновщикаКакМассивСтруктур = Новый Массив;
	параметрыКомпоновщикаКакМассивСтруктур.Добавить( Новый Структура("имя,значение", "ДатаНачало", ДатаНач) );
	параметрыКомпоновщикаКакМассивСтруктур.Добавить( Новый Структура("имя,значение", "ДатаОкончания", ДатаКон) );
	
	СформироватьОтчетПоСхемеКомпоновкиИОтправитьПисьмом(массивАдресаПолучателей, темаПисьма, текстПисьмаТело, имяОтчетаВКонфигурации, СхемаКомпоновкиДанных, параметрыКомпоновщикаКакМассивСтруктур);
	
КонецПроцедуры


#Область ОбщийКод
Функция ПолучитьМассивАдресов(имяОтчета)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокПолучателейАвтоРассылкиОтчетов.ИмяОтчета КАК ИмяОтчета,
	|	СписокПолучателейАвтоРассылкиОтчетов.СписокАдресов КАК СписокАдресов
	|ИЗ
	|	РегистрСведений.СписокПолучателейАвтоРассылкиОтчетов КАК СписокПолучателейАвтоРассылкиОтчетов
	|ГДЕ
	|	СписокПолучателейАвтоРассылкиОтчетов.ИмяОтчета = &ИмяОтчета";
	
	Запрос.УстановитьПараметр("ИмяОтчета", имяОтчета);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат СтрРазделить(ВыборкаДетальныеЗаписи.СписокАдресов, ";", ЛОЖЬ);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура СформироватьОтчетПоСхемеКомпоновкиИОтправитьПисьмом(
	массивАдресаПолучателей, темаПисьма, текстПисьмаТело, имяОтчетаВКонфигурации,
	СхемаКомпоновкиДанных, параметрыКомпоновщикаКакМассивСтруктур, расширениеФайла = "PDF")
	
	Если массивАдресаПолучателей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Отчет = Отчеты[имяОтчетаВКонфигурации].Создать();
	Отчет.КомпоновщикНастроек.Инициализировать( Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	итераторА = 0;
	Пока параметрыКомпоновщикаКакМассивСтруктур.Количество() > итераторА Цикл
		текПарам = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(параметрыКомпоновщикаКакМассивСтруктур[итераторА].имя);
		Если (текПарам = Неопределено) Тогда
			итераторА = итераторА + 1;
			Продолжить;
		КонецЕсли;
		текПарам.Значение = параметрыКомпоновщикаКакМассивСтруктур[итераторА].значение;
		текПарам.Использование = Истина;		
		
		итераторА = итераторА + 1;
	КонецЦикла;	
	
	Настройки = Отчет.КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, Новый ДанныеРасшифровкиКомпоновкиДанных);
	
	ДанныеРасшифровкиОбъект =  Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	ПроцессорКомпоновки = новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,,ДанныеРасшифровкиОбъект,Истина);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
	
	ПроцессорВывода = новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабДок);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ИмяСохраняемогоФайла = имяОтчетаВКонфигурации + Строка( Формат(ТекущаяДата(),"ДФ=ddMMyyyyssmm") ) + "." + расширениеФайла;
	МестоположениеФайла  = "D:\Synch1C\umofas\";
	ФалйВложения = Новый Структура("Путь,Имя", МестоположениеФайла, ИмяСохраняемогоФайла);
	
	ТабДок.Записать(МестоположениеФайла + ИмяСохраняемогоФайла, ТипФайлаТабличногоДокумента[расширениеФайла]);
	
	ОбщийМодульEmail.ОтправитьСодержимое("Service 1C Massandra",
	массивАдресаПолучателей,
	темаПисьма,
	текстПисьмаТело,
	,ФалйВложения);
	
	УдалитьФайлы(ФалйВложения.Путь + "\" + ФалйВложения.Имя);
	
КонецПроцедуры
#КонецОбласти